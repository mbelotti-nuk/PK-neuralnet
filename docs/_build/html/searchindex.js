Search.setIndex({"docnames": ["Installation", "Package", "Theory", "Usage", "index", "modules", "pkdnn", "pkdnn.export", "pkdnn.functionalities", "pkdnn.inp_process", "pkdnn.net", "tables/export_example", "tables/inp_proc_example", "tables/predict_example", "tables/train_example"], "filenames": ["Installation.rst", "Package.rst", "Theory.rst", "Usage.rst", "index.rst", "modules.rst", "pkdnn.rst", "pkdnn.export.rst", "pkdnn.functionalities.rst", "pkdnn.inp_process.rst", "pkdnn.net.rst", "tables/export_example.md", "tables/inp_proc_example.md", "tables/predict_example.md", "tables/train_example.md"], "titles": ["Installation", "pkdnn Package", "Theory", "Usage", "Welcome to Point Kernel Deep Neural Network (pkdnn)\u2019s documentation!", "Modules of pkdnn", "pkdnn package", "pkdnn.export package", "pkdnn.functionalities package", "pkdnn.inp_process package", "pkdnn.net package", "Export to NACARTE module - parameters", "Database process moduel - parameters", "Pkdnn prediction module - parameters", "Pkdnn training module - parameters"], "terms": {"To": [0, 6], "pkdnn": [0, 11], "first": 0, "download": 0, "packag": [0, 3, 4, 5], "from": [0, 2, 3, 6, 9, 10, 14], "here": [0, 6, 14], "go": 0, "root": [0, 3], "folder": [0, 3, 6, 10, 12, 13, 14], "us": [0, 3, 6, 7, 10, 13, 14], "makefil": 0, "avail": [0, 3, 6, 12], "make": [0, 3], "should": [0, 6, 9, 10, 13, 14], "your": 0, "pc": 0, "type": [0, 6, 9, 10, 14], "note": [0, 11, 13, 14], "command": [0, 6], "ar": [0, 6, 9, 12, 13, 14], "written": 0, "environ": 0, "pyton": 0, "ex": [0, 3, 6], "setup": 0, "py": 0, "The": [2, 3, 6, 9], "pk": 2, "method": [2, 10], "i": [2, 3, 6, 7, 9, 11, 13, 14], "an": [2, 3, 7], "analyt": 2, "techniqu": 2, "calcul": [2, 9], "photon": 2, "radiat": [2, 4, 9], "come": 2, "volum": 2, "divid": 2, "ensembl": 2, "sourc": [2, 6, 7, 8, 9, 10, 12], "each": [2, 3, 10, 11, 13, 14], "contribut": [2, 9], "dose": [2, 6, 9, 10, 12], "measur": 2, "x": [2, 6, 8, 10, 12, 13, 14], "consid": [2, 9], "direct": [2, 9, 14], "model": [2, 6, 7, 10, 11], "rai": 2, "which": [2, 6, 10, 11, 12, 13, 14], "attenu": [2, 6, 9, 12], "exponenti": 2, "along": 2, "thick": [2, 9], "t": [2, 10], "medium": 2, "between": 2, "ii": 2, "indirect": 2, "reach": 2, "due": 2, "scatter": 2, "induc": 2, "build": 2, "up": 2, "factor": [2, 6, 9, 10, 14], "b": [2, 12, 13, 14], "e": [2, 10], "overal": 2, "estim": 2, "d": 2, "c": 2, "exp": 2, "mu": 2, "4": [2, 3], "pi": 2, "r": 2, "2": [2, 9, 12, 14], "where": 2, "flux": [2, 6, 12], "convers": [2, 6, 9, 12], "distanc": 2, "coeffici": [2, 6, 12], "ha": [3, 6, 11, 13, 14], "function": [3, 5, 6, 10, 14], "take": [3, 10], "input": [3, 6, 9, 10, 11, 12, 13, 14], "yaml": [3, 6], "file": [3, 4, 6, 9, 10, 11, 12, 13, 14], "exampl": [3, 6], "present": [3, 6, 10, 13, 14], "thi": [3, 6, 9, 10, 11, 12, 13, 14], "modul": [3, 4], "convert": [3, 6], "raw": [3, 9], "mcnp": [3, 4, 6, 9, 12], "meshtal": [3, 4, 6, 9, 12], "can": [3, 6, 7], "process": [3, 9, 13], "moduel": 3, "io_path": 3, "inp_spec": 3, "out_spec": 3, "geom_spec": 3, "mat_spec": 3, "databasepknn": 3, "config": [3, 5, 6, 10], "path": [3, 6, 8, 9, 10, 11, 12, 13, 14], "list": [3, 6, 9, 10, 11, 12, 13, 14], "nn_spec": 3, "training_paramet": 3, "metric": 3, "optim": [3, 7, 10], "lr_schedul": [3, 10], "trainpkdnn": 3, "prediciton": [3, 13], "predictpkdnn": 3, "pytorch": [3, 7, 14], "format": [3, 7], "compat": [3, 6], "savepknn": 3, "instal": 4, "linux": 4, "window": 4, "theori": 4, "standard": [4, 9], "configur": [4, 9], "export": [4, 5, 6], "usag": [4, 6], "databas": [4, 5, 6, 10, 13, 14], "creation": 4, "train": [4, 5, 10, 11, 13], "predict": [4, 5, 8], "nacart": [4, 6], "index": 4, "search": 4, "page": [4, 14], "submodul": 5, "build_databas": 5, "main": [5, 6], "write_specif": [5, 6], "exportmodel": 5, "input_data_process": [5, 6], "set_environ": [5, 6], "set_training_var": [5, 6], "content": 5, "subpackag": 5, "exportsd": [5, 6], "importsd": [5, 6], "graphic": [5, 6], "inp_process": [5, 6], "binaryread": [5, 6], "net": [5, 6], "datamanag": [5, 6], "pk_nn": [5, 6], "pytorchtool": [5, 6], "trainfunct": [5, 6], "you": 6, "find": [6, 10], "creat": [6, 9, 14], "binari": [6, 7, 9, 12], "contain": [6, 10, 12, 13, 14], "result": [6, 12, 13], "one": [6, 10], "input_process_exampl": 6, "Into": 6, "databs": 6, "given": [6, 9, 10], "run": [6, 10], "path_to_config_fil": 6, "provid": 6, "follow": 6, "specif": [6, 13], "string": 6, "among": 6, "possibl": 6, "ones": 6, "output": [6, 9, 10, 11, 12, 13, 14], "database_folder_path": [6, 12], "absolut": [6, 9, 11, 12, 13, 14], "user": 6, "want": 6, "store": [6, 12, 13, 14], "raw_path": [6, 12], "mesh_dim": [6, 9, 10, 12, 13, 14], "integ": 6, "number": [6, 9, 10, 11, 12, 13, 14], "voxel": [6, 14], "y": [6, 8, 9, 10, 12, 13, 14], "z": [6, 12, 13, 14], "mesh": [6, 12, 14], "p0": [6, 9, 12], "wall": [6, 9, 12], "coordin": [6, 9, 12], "axi": [6, 9], "perpendicular": 6, "wall_norm": [6, 12], "normal": [6, 12], "atomic_numb": [6, 9, 12], "atom": [6, 12], "element": [6, 12], "": [6, 12], "materi": [6, 12], "mass_fract": [6, 9, 12], "mass": [6, 9, 12], "fraction": [6, 12], "ro": [6, 9, 12], "densiti": [6, 12], "path_to_dose_convers": [6, 9, 12], "path_to_mass_att_coeff": [6, 9, 12], "write": [6, 7], "text": 6, "paramet": [6, 7, 9, 10], "neural": [6, 10, 11, 13, 14], "network": [6, 10, 11, 13, 14], "save": [6, 7, 9, 10, 11, 13, 14], "pt": [6, 11, 13], "dat": [6, 11], "export_exampl": 6, "exportpkdnn": 6, "check": 6, "predict_exampl": 6, "predictipkdnn": 6, "point": [6, 9, 10, 13, 14], "kernel": [6, 10], "train_exampl": 6, "save_adadelta": [6, 7], "save_adagrad": [6, 7], "save_adam": [6, 7], "save_adamax": [6, 7], "save_adamw": [6, 7], "save_asgd": [6, 7], "save_nadam": [6, 7], "save_radam": [6, 7], "save_rmsprop": [6, 7], "save_rprop": [6, 7], "save_sgd": [6, 7], "save_state_dict": [6, 7], "load_state_dict": [6, 7], "check_train_config": [6, 8], "load": [6, 7, 8], "load_config": [6, 8], "hist_plot": [6, 8], "kde_plot": [6, 8], "list_kde_plot": [6, 8], "plot": [6, 8], "plotspatialdistribut": [6, 8], "plotxi": [6, 8], "plot_2d": [6, 8], "raw_read": [6, 9], "binary_read": [6, 9], "error": [6, 8, 9], "filter": [6, 9], "get_divis": [6, 9], "set_mesh": [6, 9], "database_mak": [6, 9], "read": [6, 7, 9, 10], "save_to_binari": [6, 9], "input_admin": [6, 9], "calculate_dose_direct_contribut": [6, 9], "define_energi": [6, 9], "define_wall_coord": [6, 9], "get_coeffici": [6, 9], "slab_thick": [6, 9, 12], "dataset": [6, 10], "getal": [6, 10], "scaler": [6, 10, 13], "denorm": [6, 10], "fit_and_scal": [6, 10], "scale": [6, 10, 13, 14], "database_read": [6, 10], "read_data": [6, 10], "read_data_from_fil": [6, 10], "shuffl": [6, 10], "split_train_v": [6, 10], "make_predict": [6, 10], "pknn": [6, 10], "forward": [6, 10], "earlystop": [6, 10], "save_checkpoint": [6, 10], "epoch": [6, 10, 14], "fwd_calcul": [6, 10], "plot_result": [6, 10], "print_scor": [6, 10], "to_devic": [6, 10], "train_model": [6, 10], "stream": 7, "sd": 7, "pytoch": 7, "state": 7, "dictionari": [7, 10], "torchsharp": 7, "A": 7, "produc": 7, "state_dict": 7, "open": 7, "o": 7, "return": [7, 9, 10], "config_fil": 8, "str": [8, 9, 10], "valu": [8, 9, 10, 11, 12, 13, 14], "name": [8, 9, 11, 13], "none": [8, 9, 10, 14], "logscal": 8, "fals": [8, 10, 14], "var1": 8, "namevar1": 8, "coord": 8, "error_threshold": 8, "real": 8, "class": [9, 10], "size": [9, 10, 14], "int": [9, 10], "base": [9, 10], "object": [9, 10], "filenam": [9, 13], "properti": 9, "arrai": 9, "insid": 9, "np": 9, "max_error": 9, "1": [9, 12, 14], "start": [9, 10], "end": 9, "origin": 9, "float": [9, 10, 14], "count": 9, "inp_adm": 9, "reader": 9, "extract": 9, "inform": [9, 11, 12, 13, 14], "aim": 9, "n_sampl": 9, "desid": 9, "desir": 9, "after": [9, 10], "two": [9, 10], "variabl": 9, "database_input": [9, 10, 13, 14], "database_output": 9, "exctract": 9, "option": [9, 10], "lower": 9, "than": [9, 10], "total": 9, "span": 9, "0": [9, 10, 11, 12, 13, 14], "default": [9, 10], "rel": [9, 13], "save_path": [9, 10, 11, 13], "order": [9, 10], "were": 9, "info": [9, 10], "plane_norm": 9, "energi": [9, 12, 13, 14], "plane_coord": 9, "permit": 9, "relev": 9, "radiaiton": 9, "talli": 9, "calul": 9, "posit": [9, 12], "instanti": 9, "relat": 9, "coeff": 9, "In": [9, 11, 12, 13, 14], "particular": 9, "defin": [9, 10], "mev": 9, "coefficient": 9, "3": 9, "_description_": 9, "plane": 9, "dict": 10, "tensor": 10, "tupl": 10, "input_scale_typ": 10, "output_scale_typ": 10, "log_scal": 10, "bool": 10, "handl": 10, "re": 10, "its": 10, "torch": [10, 14], "ouptut": 10, "fit": 10, "correspond": [10, 12, 14], "featur": 10, "sample_per_cas": 10, "20000": 10, "manag": 10, "data": 10, "out_log_scal": [10, 13, 14], "true": [10, 13, 14], "num_inp_fil": 10, "out_clip_valu": 10, "log": [10, 13, 14], "random": 10, "sub": 10, "set": [10, 13, 14], "If": 10, "all": [10, 14], "clip": [10, 14], "min": [10, 14], "max": [10, 14], "g": 10, "0_10_1_1100": 10, "0_20_1_1100": 10, "perc": 10, "85": 10, "split": [10, 14], "valid": [10, 14], "percentag": [10, 14], "test_fil": 10, "built": 10, "0x7fd590ea6540": 10, "layer_s": 10, "deep": 10, "applic": 10, "comput": 10, "perform": 10, "everi": 10, "call": 10, "overridden": 10, "subclass": 10, "although": 10, "recip": [10, 14], "pass": 10, "need": 10, "within": 10, "instanc": 10, "afterward": 10, "instead": 10, "sinc": 10, "former": 10, "care": 10, "regist": 10, "hook": 10, "while": [10, 11, 12, 13], "latter": 10, "silent": 10, "ignor": 10, "them": 10, "patienc": [10, 14], "7": 10, "verbos": 10, "delta": 10, "earli": 10, "stop": [10, 14], "loss": [10, 14], "doesn": 10, "improv": [10, 14], "val_loss": 10, "when": 10, "decreas": 10, "scope": 10, "loader": 10, "loss_fn": 10, "acc_fn": 10, "train_loss_valu": 10, "val_loss_valu": 10, "train_acc_valu": 10, "val_acc_valu": 10, "t0": 10, "train_loss": 10, "train_acc": 10, "val_acc": 10, "train_dataset": 10, "val_dataset": 10, "10": [10, 14], "batch_siz": [10, 14], "256": 10, "_summary_": 10, "about": [10, 14], "nn": 10, "befor": [10, 14], "batch": [10, 14], "checkpoint": 10, "mixed_precis": [10, 14], "schedul": [10, 14], "100": [10, 12, 13, 14], "devic": 10, "accuraci": [10, 14], "kwarg": 10, "quantiti": [11, 12, 13, 14], "case": [11, 12, 13, 14], "dnn": [11, 13, 14], "kei": [11, 12, 13, 14], "forexport": 11, "pathin": 11, "whileth": 11, "issav": 11, "save_nam": 11, "path_to_model": [11, 13], "neuralnet": [11, 13], "nnmodel": [11, 13], "f_map": [11, 13, 14], "6": [11, 13, 14], "128": [11, 13, 14], "64": [11, 13, 14], "8": [11, 12, 13, 14], "architectur": [11, 13, 14], "give": [11, 13, 14], "layerth": [11, 13, 14], "correspon": [11, 13, 14], "neuron": [11, 13, 14], "thatf_map": [11, 13, 14], "equal": [11, 13, 14], "forprocess": [12, 13], "inputsar": [12, 13], "meshtalresult": 12, "correspondingdatabas": 12, "tosav": 12, "raw_files_fold": 12, "mcnpresult": 12, "dist_source_t": [12, 13, 14], "dist_shield_t": [12, 13, 14], "mfp": [12, 13, 14], "theta": [12, 13, 14], "fi": [12, 13, 14], "delta_t": 12, "angl": 12, "dist_source_wal": 12, "dist_wall_t": 12, "80": [12, 13, 14], "35": [12, 13, 14], "subdivis": 12, "2000": 12, "shield": 12, "500": 12, "11": 12, "12": 12, "13": 12, "14": 12, "16": [12, 14], "19": 12, "20": 12, "26": 12, "0056": 12, "497500": 12, "017100": 12, "002600": 12, "046900": 12, "314700": 12, "001300": 12, "019200": 12, "082800": 12, "012400": 12, "doseequivalentconvers": 12, "txt": 12, "massattcoeff": 12, "xml": 12, "how": 13, "sequenc": 13, "relativescal": 13, "toscal": 13, "outputar": 13, "whichto": 13, "path_to_scal": 13, "pickl": 13, "path_to_fil": 13, "databasefil": 13, "0_100_1_1100": 13, "test": 13, "null": [13, 14], "specifi": [13, 14], "neuralnetwork": [13, 14], "abov": [13, 14], "subset": [13, 14], "theactual": [13, 14], "newtork": [13, 14], "meshsubdivis": 13, "ani": 14, "goe": 14, "path_to_databas": 14, "thedatabas": 14, "folderin": 14, "databasespecif": 14, "inwhich": 14, "save_directori": 14, "resultswil": 14, "inp_scaletyp": 14, "minmax": 14, "std": 14, "out_scaletyp": 14, "out_clip": 14, "1e": 14, "21": 14, "therefer": 14, "n_file": 14, "200": 14, "usedin": 14, "samples_per_cas": 14, "fortrain": 14, "tomesh_dim": 14, "75": 14, "2048": 14, "n_epoch": 14, "wait": 14, "inth": 14, "mix": 14, "precis": 14, "32": 14, "gpu": 14, "trainingref": 14, "http": 14, "org": 14, "tutori": 14, "amp_recip": 14, "html": 14, "mse": 14, "l1": 14, "adamw": 14, "learning_r": 14, "001": 14, "weight_decai": 14, "ref": 14, "doc": 14, "stabl": 14, "gener": 14, "lr": 14, "_": 14, "reducelronplateau": 14, "5": 14}, "objects": {"": [[6, 0, 0, "-", "pkdnn"]], "pkdnn": [[6, 0, 0, "-", "build_database"], [7, 0, 0, "-", "export"], [6, 0, 0, "-", "exportmodel"], [8, 0, 0, "-", "functionalities"], [9, 0, 0, "-", "inp_process"], [10, 0, 0, "-", "net"], [6, 0, 0, "-", "predict"], [6, 0, 0, "-", "train"]], "pkdnn.build_database": [[6, 1, 1, "", "main"], [6, 1, 1, "", "write_specifics"]], "pkdnn.export": [[7, 0, 0, "-", "exportsd"], [7, 0, 0, "-", "importsd"]], "pkdnn.export.exportsd": [[7, 1, 1, "", "save_adadelta"], [7, 1, 1, "", "save_adagrad"], [7, 1, 1, "", "save_adam"], [7, 1, 1, "", "save_adamax"], [7, 1, 1, "", "save_adamw"], [7, 1, 1, "", "save_asgd"], [7, 1, 1, "", "save_nadam"], [7, 1, 1, "", "save_radam"], [7, 1, 1, "", "save_rmsprop"], [7, 1, 1, "", "save_rprop"], [7, 1, 1, "", "save_sgd"], [7, 1, 1, "", "save_state_dict"]], "pkdnn.export.importsd": [[7, 1, 1, "", "load_state_dict"]], "pkdnn.exportmodel": [[6, 1, 1, "", "main"]], "pkdnn.functionalities": [[8, 0, 0, "-", "config"], [8, 0, 0, "-", "graphics"]], "pkdnn.functionalities.config": [[8, 1, 1, "", "check_train_config"], [8, 1, 1, "", "load"], [8, 1, 1, "", "load_config"]], "pkdnn.functionalities.graphics": [[8, 1, 1, "", "hist_plot"], [8, 1, 1, "", "kde_plot"], [8, 1, 1, "", "list_kde_plot"], [8, 1, 1, "", "plot"], [8, 1, 1, "", "plotSpatialDistribution"], [8, 1, 1, "", "plotXY"], [8, 1, 1, "", "plot_2D"]], "pkdnn.inp_process": [[9, 0, 0, "-", "binaryreader"], [9, 0, 0, "-", "database"]], "pkdnn.inp_process.binaryreader": [[9, 2, 1, "", "raw_reader"]], "pkdnn.inp_process.binaryreader.raw_reader": [[9, 3, 1, "", "binary_reader"], [9, 4, 1, "", "dose"], [9, 4, 1, "", "errors"], [9, 3, 1, "", "filter"], [9, 3, 1, "", "get_division"], [9, 3, 1, "", "set_mesh"]], "pkdnn.inp_process.database": [[9, 2, 1, "", "database_maker"], [9, 2, 1, "", "input_admin"]], "pkdnn.inp_process.database.database_maker": [[9, 3, 1, "", "read"], [9, 3, 1, "", "save_to_binary"]], "pkdnn.inp_process.database.input_admin": [[9, 3, 1, "", "calculate_dose_direct_contribution"], [9, 3, 1, "", "define_energy"], [9, 3, 1, "", "define_wall_coords"], [9, 3, 1, "", "get_coefficients"], [9, 3, 1, "", "slab_thickness"]], "pkdnn.net": [[10, 0, 0, "-", "datamanager"], [10, 0, 0, "-", "pk_nn"], [10, 0, 0, "-", "pytorchtools"], [10, 0, 0, "-", "trainFunctions"]], "pkdnn.net.datamanager": [[10, 2, 1, "", "Dataset"], [10, 2, 1, "", "Scaler"], [10, 2, 1, "", "database_reader"]], "pkdnn.net.datamanager.Dataset": [[10, 3, 1, "", "getall"]], "pkdnn.net.datamanager.Scaler": [[10, 3, 1, "", "denormalize"], [10, 3, 1, "", "fit_and_scale"], [10, 3, 1, "", "scale"]], "pkdnn.net.datamanager.database_reader": [[10, 3, 1, "", "read_data"], [10, 3, 1, "", "read_data_from_file"], [10, 3, 1, "", "shuffle"], [10, 3, 1, "", "split_train_val"]], "pkdnn.net.pk_nn": [[10, 1, 1, "", "make_prediction"], [10, 2, 1, "", "pknn"]], "pkdnn.net.pk_nn.pknn": [[10, 3, 1, "", "forward"]], "pkdnn.net.pytorchtools": [[10, 2, 1, "", "EarlyStopping"]], "pkdnn.net.pytorchtools.EarlyStopping": [[10, 3, 1, "", "save_checkpoint"]], "pkdnn.net.trainFunctions": [[10, 1, 1, "", "epoch"], [10, 1, 1, "", "fwd_calculation"], [10, 1, 1, "", "plot_results"], [10, 1, 1, "", "print_scores"], [10, 1, 1, "", "to_device"], [10, 1, 1, "", "train"], [10, 1, 1, "", "train_model"]], "pkdnn.predict": [[6, 1, 1, "", "main"]], "pkdnn.train": [[6, 1, 1, "", "input_data_processing"], [6, 1, 1, "", "main"], [6, 1, 1, "", "set_environment"], [6, 1, 1, "", "set_training_vars"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"instal": 0, "linux": 0, "window": 0, "pkdnn": [1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14], "packag": [1, 6, 7, 8, 9, 10], "standard": 1, "radiat": 1, "configur": 1, "export": [1, 3, 7, 11], "mcnp": 1, "meshtal": 1, "file": 1, "theori": 2, "point": [2, 4], "kernel": [2, 4], "usag": 3, "databas": [3, 9, 12], "creation": 3, "paramet": [3, 11, 12, 13, 14], "train": [3, 6, 14], "predict": [3, 6, 13], "nacart": [3, 11], "welcom": 4, "deep": 4, "neural": 4, "network": 4, "": 4, "document": 4, "content": [4, 6, 7, 8, 9, 10], "indic": 4, "tabl": 4, "modul": [5, 6, 7, 8, 9, 10, 11, 13, 14], "submodul": [6, 7, 8, 9, 10], "build_databas": 6, "exportmodel": 6, "subpackag": 6, "exportsd": 7, "importsd": 7, "function": 8, "config": 8, "graphic": 8, "inp_process": 9, "binaryread": 9, "net": 10, "datamanag": 10, "pk_nn": 10, "pytorchtool": 10, "trainfunct": 10, "io_path": [11, 12, 13, 14], "member": [11, 12, 13, 14], "variabl": [11, 12, 13, 14], "nn_spec": [11, 13, 14], "process": 12, "moduel": 12, "inp_spec": [12, 13, 14], "out_spec": [12, 13, 14], "geom_spec": 12, "mat_spec": 12, "training_paramet": 14, "metric": 14, "optim": 14, "lr_schedul": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Installation": [[0, "installation"]], "Linux": [[0, "linux"]], "Windows": [[0, "windows"]], "pkdnn Package": [[1, "pkdnn-package"]], "Standard radiation configuration": [[1, "standard-radiation-configuration"]], "Exportation of MCNP meshtal files": [[1, "exportation-of-mcnp-meshtal-files"]], "Theory": [[2, "theory"]], "Point Kernel": [[2, "point-kernel"]], "Usage": [[3, "usage"]], "Database creation": [[3, "database-creation"]], "Parameters:": [[3, null], [3, null], [3, null], [3, null]], "Pkdnn training": [[3, "pkdnn-training"]], "Pkdnn prediction": [[3, "pkdnn-prediction"]], "Export to NACARTE": [[3, "export-to-nacarte"]], "Welcome to Point Kernel Deep Neural Network (pkdnn)\u2019s documentation!": [[4, "welcome-to-point-kernel-deep-neural-network-pkdnn-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Modules of pkdnn": [[5, "modules-of-pkdnn"]], "pkdnn package": [[6, "pkdnn-package"]], "Submodules": [[6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "pkdnn.build_database module": [[6, "module-pkdnn.build_database"]], "pkdnn.exportmodel module": [[6, "module-pkdnn.exportmodel"]], "pkdnn.predict module": [[6, "module-pkdnn.predict"]], "pkdnn.train module": [[6, "module-pkdnn.train"]], "Module contents": [[6, "module-pkdnn"], [7, "module-pkdnn.export"], [8, "module-pkdnn.functionalities"], [9, "module-pkdnn.inp_process"], [10, "module-pkdnn.net"]], "Subpackages": [[6, "subpackages"]], "pkdnn.export package": [[7, "pkdnn-export-package"]], "pkdnn.export.exportsd module": [[7, "module-pkdnn.export.exportsd"]], "pkdnn.export.importsd module": [[7, "module-pkdnn.export.importsd"]], "pkdnn.functionalities package": [[8, "pkdnn-functionalities-package"]], "pkdnn.functionalities.config module": [[8, "module-pkdnn.functionalities.config"]], "pkdnn.functionalities.graphics module": [[8, "module-pkdnn.functionalities.graphics"]], "pkdnn.inp_process package": [[9, "pkdnn-inp-process-package"]], "pkdnn.inp_process.binaryreader module": [[9, "module-pkdnn.inp_process.binaryreader"]], "pkdnn.inp_process.database module": [[9, "module-pkdnn.inp_process.database"]], "pkdnn.net package": [[10, "pkdnn-net-package"]], "pkdnn.net.datamanager module": [[10, "module-pkdnn.net.datamanager"]], "pkdnn.net.pk_nn module": [[10, "module-pkdnn.net.pk_nn"]], "pkdnn.net.pytorchtools module": [[10, "module-pkdnn.net.pytorchtools"]], "pkdnn.net.trainFunctions module": [[10, "module-pkdnn.net.trainFunctions"]], "Export to NACARTE module - parameters": [[11, "export-to-nacarte-module-parameters"]], "io_paths": [[11, "io-paths"], [12, "io-paths"], [13, "io-paths"], [14, "io-paths"]], "Member variables:": [[11, "member-variables"], [11, "id1"], [12, "member-variables"], [12, "id1"], [12, "id2"], [12, "id3"], [12, "id4"], [13, "member-variables"], [13, "id1"], [13, "id2"], [13, "id3"], [14, "member-variables"], [14, "id1"], [14, "id2"], [14, "id3"], [14, "id4"], [14, "id5"], [14, "id6"], [14, "id7"]], "nn_spec": [[11, "nn-spec"], [13, "nn-spec"], [14, "nn-spec"]], "Database process moduel - parameters": [[12, "database-process-moduel-parameters"]], "inp_spec": [[12, "inp-spec"], [13, "inp-spec"], [14, "inp-spec"]], "out_spec": [[12, "out-spec"], [13, "out-spec"], [14, "out-spec"]], "geom_spec": [[12, "geom-spec"]], "mat_spec": [[12, "mat-spec"]], "Pkdnn prediction module - parameters": [[13, "pkdnn-prediction-module-parameters"]], "Pkdnn training module - parameters": [[14, "pkdnn-training-module-parameters"]], "training_parameters": [[14, "training-parameters"]], "metrics": [[14, "metrics"]], "optimizer": [[14, "optimizer"]], "lr_scheduler": [[14, "lr-scheduler"]]}, "indexentries": {"input_data_processing() (in module pkdnn.train)": [[6, "pkdnn.train.input_data_processing"]], "main() (in module pkdnn.build_database)": [[6, "pkdnn.build_database.main"]], "main() (in module pkdnn.exportmodel)": [[6, "pkdnn.exportmodel.main"]], "main() (in module pkdnn.predict)": [[6, "pkdnn.predict.main"]], "main() (in module pkdnn.train)": [[6, "pkdnn.train.main"]], "module": [[6, "module-pkdnn"], [6, "module-pkdnn.build_database"], [6, "module-pkdnn.exportmodel"], [6, "module-pkdnn.predict"], [6, "module-pkdnn.train"], [7, "module-pkdnn.export"], [7, "module-pkdnn.export.exportsd"], [7, "module-pkdnn.export.importsd"], [8, "module-pkdnn.functionalities"], [8, "module-pkdnn.functionalities.config"], [8, "module-pkdnn.functionalities.graphics"], [9, "module-pkdnn.inp_process"], [9, "module-pkdnn.inp_process.binaryreader"], [9, "module-pkdnn.inp_process.database"], [10, "module-pkdnn.net"], [10, "module-pkdnn.net.datamanager"], [10, "module-pkdnn.net.pk_nn"], [10, "module-pkdnn.net.pytorchtools"], [10, "module-pkdnn.net.trainFunctions"]], "pkdnn": [[6, "module-pkdnn"]], "pkdnn.build_database": [[6, "module-pkdnn.build_database"]], "pkdnn.exportmodel": [[6, "module-pkdnn.exportmodel"]], "pkdnn.predict": [[6, "module-pkdnn.predict"]], "pkdnn.train": [[6, "module-pkdnn.train"]], "set_environment() (in module pkdnn.train)": [[6, "pkdnn.train.set_environment"]], "set_training_vars() (in module pkdnn.train)": [[6, "pkdnn.train.set_training_vars"]], "write_specifics() (in module pkdnn.build_database)": [[6, "pkdnn.build_database.write_specifics"]], "load_state_dict() (in module pkdnn.export.importsd)": [[7, "pkdnn.export.importsd.load_state_dict"]], "pkdnn.export": [[7, "module-pkdnn.export"]], "pkdnn.export.exportsd": [[7, "module-pkdnn.export.exportsd"]], "pkdnn.export.importsd": [[7, "module-pkdnn.export.importsd"]], "save_adadelta() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_adadelta"]], "save_adagrad() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_adagrad"]], "save_adam() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_adam"]], "save_adamax() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_adamax"]], "save_adamw() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_adamw"]], "save_asgd() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_asgd"]], "save_nadam() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_nadam"]], "save_radam() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_radam"]], "save_rmsprop() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_rmsprop"]], "save_rprop() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_rprop"]], "save_sgd() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_sgd"]], "save_state_dict() (in module pkdnn.export.exportsd)": [[7, "pkdnn.export.exportsd.save_state_dict"]], "check_train_config() (in module pkdnn.functionalities.config)": [[8, "pkdnn.functionalities.config.check_train_config"]], "hist_plot() (in module pkdnn.functionalities.graphics)": [[8, "pkdnn.functionalities.graphics.hist_plot"]], "kde_plot() (in module pkdnn.functionalities.graphics)": [[8, "pkdnn.functionalities.graphics.kde_plot"]], "list_kde_plot() (in module pkdnn.functionalities.graphics)": [[8, "pkdnn.functionalities.graphics.list_kde_plot"]], "load() (in module pkdnn.functionalities.config)": [[8, "pkdnn.functionalities.config.load"]], "load_config() (in module pkdnn.functionalities.config)": [[8, "pkdnn.functionalities.config.load_config"]], "pkdnn.functionalities": [[8, "module-pkdnn.functionalities"]], "pkdnn.functionalities.config": [[8, "module-pkdnn.functionalities.config"]], "pkdnn.functionalities.graphics": [[8, "module-pkdnn.functionalities.graphics"]], "plot() (in module pkdnn.functionalities.graphics)": [[8, "pkdnn.functionalities.graphics.plot"]], "plotspatialdistribution() (in module pkdnn.functionalities.graphics)": [[8, "pkdnn.functionalities.graphics.plotSpatialDistribution"]], "plotxy() (in module pkdnn.functionalities.graphics)": [[8, "pkdnn.functionalities.graphics.plotXY"]], "plot_2d() (in module pkdnn.functionalities.graphics)": [[8, "pkdnn.functionalities.graphics.plot_2D"]], "binary_reader() (pkdnn.inp_process.binaryreader.raw_reader method)": [[9, "pkdnn.inp_process.binaryreader.raw_reader.binary_reader"]], "calculate_dose_direct_contribution() (pkdnn.inp_process.database.input_admin method)": [[9, "pkdnn.inp_process.database.input_admin.calculate_dose_direct_contribution"]], "database_maker (class in pkdnn.inp_process.database)": [[9, "pkdnn.inp_process.database.database_maker"]], "define_energy() (pkdnn.inp_process.database.input_admin method)": [[9, "pkdnn.inp_process.database.input_admin.define_energy"]], "define_wall_coords() (pkdnn.inp_process.database.input_admin method)": [[9, "pkdnn.inp_process.database.input_admin.define_wall_coords"]], "dose (pkdnn.inp_process.binaryreader.raw_reader property)": [[9, "pkdnn.inp_process.binaryreader.raw_reader.dose"]], "errors (pkdnn.inp_process.binaryreader.raw_reader property)": [[9, "pkdnn.inp_process.binaryreader.raw_reader.errors"]], "filter() (pkdnn.inp_process.binaryreader.raw_reader method)": [[9, "pkdnn.inp_process.binaryreader.raw_reader.filter"]], "get_coefficients() (pkdnn.inp_process.database.input_admin method)": [[9, "pkdnn.inp_process.database.input_admin.get_coefficients"]], "get_division() (pkdnn.inp_process.binaryreader.raw_reader method)": [[9, "pkdnn.inp_process.binaryreader.raw_reader.get_division"]], "input_admin (class in pkdnn.inp_process.database)": [[9, "pkdnn.inp_process.database.input_admin"]], "pkdnn.inp_process": [[9, "module-pkdnn.inp_process"]], "pkdnn.inp_process.binaryreader": [[9, "module-pkdnn.inp_process.binaryreader"]], "pkdnn.inp_process.database": [[9, "module-pkdnn.inp_process.database"]], "raw_reader (class in pkdnn.inp_process.binaryreader)": [[9, "pkdnn.inp_process.binaryreader.raw_reader"]], "read() (pkdnn.inp_process.database.database_maker method)": [[9, "pkdnn.inp_process.database.database_maker.read"]], "save_to_binary() (pkdnn.inp_process.database.database_maker method)": [[9, "pkdnn.inp_process.database.database_maker.save_to_binary"]], "set_mesh() (pkdnn.inp_process.binaryreader.raw_reader method)": [[9, "pkdnn.inp_process.binaryreader.raw_reader.set_mesh"]], "slab_thickness() (pkdnn.inp_process.database.input_admin method)": [[9, "pkdnn.inp_process.database.input_admin.slab_thickness"]], "dataset (class in pkdnn.net.datamanager)": [[10, "pkdnn.net.datamanager.Dataset"]], "earlystopping (class in pkdnn.net.pytorchtools)": [[10, "pkdnn.net.pytorchtools.EarlyStopping"]], "scaler (class in pkdnn.net.datamanager)": [[10, "pkdnn.net.datamanager.Scaler"]], "database_reader (class in pkdnn.net.datamanager)": [[10, "pkdnn.net.datamanager.database_reader"]], "denormalize() (pkdnn.net.datamanager.scaler method)": [[10, "pkdnn.net.datamanager.Scaler.denormalize"]], "epoch() (in module pkdnn.net.trainfunctions)": [[10, "pkdnn.net.trainFunctions.epoch"]], "fit_and_scale() (pkdnn.net.datamanager.scaler method)": [[10, "pkdnn.net.datamanager.Scaler.fit_and_scale"]], "forward() (pkdnn.net.pk_nn.pknn method)": [[10, "pkdnn.net.pk_nn.pknn.forward"]], "fwd_calculation() (in module pkdnn.net.trainfunctions)": [[10, "pkdnn.net.trainFunctions.fwd_calculation"]], "getall() (pkdnn.net.datamanager.dataset method)": [[10, "pkdnn.net.datamanager.Dataset.getall"]], "make_prediction() (in module pkdnn.net.pk_nn)": [[10, "pkdnn.net.pk_nn.make_prediction"]], "pkdnn.net": [[10, "module-pkdnn.net"]], "pkdnn.net.datamanager": [[10, "module-pkdnn.net.datamanager"]], "pkdnn.net.pk_nn": [[10, "module-pkdnn.net.pk_nn"]], "pkdnn.net.pytorchtools": [[10, "module-pkdnn.net.pytorchtools"]], "pkdnn.net.trainfunctions": [[10, "module-pkdnn.net.trainFunctions"]], "pknn (class in pkdnn.net.pk_nn)": [[10, "pkdnn.net.pk_nn.pknn"]], "plot_results() (in module pkdnn.net.trainfunctions)": [[10, "pkdnn.net.trainFunctions.plot_results"]], "print_scores() (in module pkdnn.net.trainfunctions)": [[10, "pkdnn.net.trainFunctions.print_scores"]], "read_data() (pkdnn.net.datamanager.database_reader method)": [[10, "pkdnn.net.datamanager.database_reader.read_data"]], "read_data_from_file() (pkdnn.net.datamanager.database_reader method)": [[10, "pkdnn.net.datamanager.database_reader.read_data_from_file"]], "save_checkpoint() (pkdnn.net.pytorchtools.earlystopping method)": [[10, "pkdnn.net.pytorchtools.EarlyStopping.save_checkpoint"]], "scale() (pkdnn.net.datamanager.scaler method)": [[10, "pkdnn.net.datamanager.Scaler.scale"]], "shuffle() (pkdnn.net.datamanager.database_reader method)": [[10, "pkdnn.net.datamanager.database_reader.shuffle"]], "split_train_val() (pkdnn.net.datamanager.database_reader method)": [[10, "pkdnn.net.datamanager.database_reader.split_train_val"]], "to_device() (in module pkdnn.net.trainfunctions)": [[10, "pkdnn.net.trainFunctions.to_device"]], "train() (in module pkdnn.net.trainfunctions)": [[10, "pkdnn.net.trainFunctions.train"]], "train_model() (in module pkdnn.net.trainfunctions)": [[10, "pkdnn.net.trainFunctions.train_model"]]}})